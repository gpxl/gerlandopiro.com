<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tech | Gerlando Piro]]></title>
  <link href="http://www.gerlandopiro.com/blog/categories/tech/atom.xml" rel="self"/>
  <link href="http://www.gerlandopiro.com/"/>
  <updated>2014-02-11T23:03:30-08:00</updated>
  <id>http://www.gerlandopiro.com/</id>
  <author>
    <name><![CDATA[Gerlando Piro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gems to use when crafting a Rails MVP]]></title>
    <link href="http://www.gerlandopiro.com/2013/03/07/gems-to-use-when-crafting-a-rails-mvp/"/>
    <updated>2013-03-07T09:19:00-08:00</updated>
    <id>http://www.gerlandopiro.com/2013/03/07/gems-to-use-when-crafting-a-rails-mvp</id>
    <content type="html"><![CDATA[<p>When creating a new web application there's some basic functionality that you will probably want to add and get out of the way so you can start building out your core business logic. A lot of that functionality can be found pre-baked in the RubyGems ecosystem but the overwhelming number of gems, 52k and counting, makes it hard to know what to use and what's crap. Here's a list of useful gems to get your app bootstrapped so the real work can begin.</p>

<h2>Authentication</h2>

<p>Almost every web application needs user authentication and authorization capabilities. The gems below make it easy.</p>

<p><strong><a href="http://rubygems.org/gems/devise">Devise</a></strong>: Devise is a flexible authentication solution that makes it easy to add user registration and login capabilities to your app. Devise has built-in Omniauth support so you can quickly integrate with 3rd parties such as <a href="https://github.com/arunagw/omniauth-twitter">Twitter</a>, <a href="https://github.com/mkdynamic/omniauth-facebook">Facebook</a>, and just about <a href="https://github.com/intridea/omniauth/wiki/List-of-Strategies">everyone else</a>.</p>

<p><strong><a href="http://rubygems.org/gems/cancan">CanCan</a></strong>: CanCan is an authorization solution that works well with Devise and makes implementing access roles easy. All roles are defined in an Ability class that works with your User attributes to allow/deny access to your controller actions.</p>

<h2>Upload management</h2>

<p>If your users want to contribute assets, let them!</p>

<p><strong><a href="http://rubygems.org/gems/paperclip">Paperclip</a></strong>: Paperclip makes adding files to models relatively simple. You can configure image files for post-processing with Imagemagick. And out of the box Paperclip supports local file, S3, and fog storage with Azure and Dropbox available as add-on gems.</p>

<p><em>(alternative)</em> <strong><a href="https://rubygems.org/gems/carrierwave">CarrierWave</a></strong>: I have not used CarrierWave yet since Paperclip gets the job done. I've heard some say they prefer it over Paperclip so it's worth checking out if Paperclip doesn't float your boat.</p>

<h2>Payment Processing</h2>

<p>What's the point in having customers if you can't bill them?</p>

<p><strong><a href="http://rubygems.org/gems/stripe">Stripe</a></strong>: <a href="https://stripe.com/">Stripe</a> refers to itself as themselves as "Payments for developers" and so it's fitting that they have an excellent api and robust tools to make it easy to integrate. You can also allow your customers to take payments through your site, although they need to have a Stripe account as well.</p>

<p><em>(alternative)</em> <strong><a href="http://rubygems.org/gems/activemerchant">Active Merchant</a></strong>: If you want to support multiple payment processors Active Merchant is the way to go. It provides an abstraction layer that supports a ridiculous amount of <a href="https://github.com/Shopify/active_merchant/wiki/gatewayfeaturematrix">gateways</a>. Active Merchant was a direct extraction from <a href="http://www.shopify.com">Shopify</a> so it's been 'battle-tested'.</p>

<h2>Frontend</h2>

<p>These make life easier for developers writing the view layer, and for users submitting text content.</p>

<p><strong><a href="http://rubygems.org/gems/haml">Haml</a></strong>: <a href="http://haml.info">Haml</a> is an alternative syntax for html that, in my opinion, is WAY better to work with than plain HTML. Unlike HTML it's whitespace sensitive and does not require closing tags. This does a good job of enforcing proper formatting habits and removes the mental overhead of closing tags in your more heavily nested pieces of layout.</p>

<p>I've interacted with some that absolutely hate Haml so it's certainly a  personal preference, but I would suggest you give it a chance.</p>

<p><strong><a href="http://rubygems.org/gems/github-markdown">github-markdown</a></strong>: Markdown is a lightweight syntax that makes writing and formatting text easy. Github's variant adds a few changes to traditional <a href="http://daringfireball.net/projects/markdown">Markdown</a> syntax and, since they use it extensively on Github.com, it should be well supported for the foreseeable future.</p>

<h2>SEO</h2>

<p>The grey area of the web...</p>

<p><strong><a href="http://rubygems.org/gems/friendly_id">Friendly Id</a></strong>: Rails surprisingly does not come out of the box with SEO friendly urls. Friendly Id fixes this by giving human-friendly strings to your data objects. You can choose one of the existing attributes in your model or pass in a generated slug. This is super handy if you want to have public, but obfuscated, urls.</p>

<h3>What are your picks?</h3>

<p>This is far from an exhaustive list, but it covers the gems I use most frequently. Now it's your turn, <a href="http://www.twitter.com/gpxl">let me know</a> what gems you use to bootstrap your MVPs.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Minimalist Blogging with IA Writer, Octopress and S3]]></title>
    <link href="http://www.gerlandopiro.com/2013/02/04/minimalist-blogging-with-ia-writer-octopress-and-s3/"/>
    <updated>2013-02-04T08:51:00-08:00</updated>
    <id>http://www.gerlandopiro.com/2013/02/04/minimalist-blogging-with-ia-writer-octopress-and-s3</id>
    <content type="html"><![CDATA[<p>As I alluded to in my <a href="/2013/01/27/starting-the-5-dollars-web-app-challenge">$5 Web App Challenge</a> post, I have not been an active writer in the past. In years past, I've tried nearmly every blogging platform available; from hosted platforms like Blogger and Tumblr, to self hosted apps like Drupal and WordPress. Nothing seemed to click and I'd find myself <a href="http://en.wiktionary.org/wiki/yak_shaving">yak shaving</a> instead of writing. Every time I would get frustrated and lose inspiration and motivation. The solution, I found recently, was to embrace constraints and simplify.</p>

<p>My current "blogging stack" consists of IA Writer, Octopress, and Amazon S3. It's a developer friendly set up so non-techies might have to learn new tricks, but learning how to DIY is in itself very rewarding. In this post break down how each layer in the stack helps me work faster, run cheaper, and stay focused on writing.</p>

<h3>The Editor: IA Writer</h3>

<p>The biggest improvement in my ability to write has been finding an editor that suited me well. <a href="http://www.iawriter.com">IA Writer</a> is a wonderfully simple iOS and OSX text editor built for the sole purpose of distraction free writing. The application has practically no chrome and few features, but the features it <em>does</em> have are extremely handy. First off is <strong>focus mode</strong>, this feature allows you to focus on the current sentence by greying out all surrounding text. Files can be saved to iCloud you can write and edit on either iOS or OSX whenever inspiration hits. The iOS version adds special keys to ease navigating through documents by word or character.</p>

<p>Most important in my mind is that IA Writer supports <a href="http://daringfireball.net/projects/markdown/syntax#overview">Markdown formatted documents</a>. This last feature is pretty awesome as the blog software I use, Octopress, also supports Markdown. This shared feature means you can easily cut and paste documents into an Octopress file or <em>edit your Octopress files directly with IA Writer</em>. IA Writer has a preview window so you can be sure your Markdown renders as you expect it to.</p>

<h3>The Blog: Octopress</h3>

<p>In keeping with the theme of simplicity, I prefer <a href="http://octopress.org">Octopress</a> as my blogging platform. Most blog platforms, such as Wordpress, are delivered as web applications. In contrast, Octopress is a static file compiler that generates your entire site on your local computer <em>before</em> pushing to a web server. Octopress does not require a web application to deliver or manage content and as such, benefits from better security, faster response times, and much lower web server requirements.</p>

<p>Octopress posts are simple text files that can be formatted with Markdown syntax and can be edited in any text editor. Site generation and web server deployment are managed through scripted Rake tasks.</p>

<p>Since the output of Octopress is static html and css, all you need is a web service that can handle static files, and that's where Amazon S3 comes in.</p>

<h3>The Web Host: Amazon S3</h3>

<p><a href="https://aws.amazon.com/s3">Amazon S3</a> has an intentionally minimal feature set for storing and retrieving static content. It's very robust and extremely cost efficient with rates currently at $0.095/mo. for a GB of storage and $0.01 per 10,000 GET requests which means you can run a pretty well trafficked site for only pennies a month. Amazon consistently improves service and prices in their efforts to dominate market share, so  S3's value over time will only increase.</p>

<p>Octopress does not currently support deployments to S3 by default, but it's <a href="https://github.com/imathis/octopress/pull/107">coming soon</a> and there are some <a href="http://www.jerome-bernard.com/blog/2011/08/20/quick-tip-for-easily-deploying-octopress-blog-on-amazon-cloudfront">good articles</a> on how to DIY it for the impatient.</p>

<h3>Wrapping Up</h3>

<p>My writing efforts are still in the nascent stage, but I'm confident I have finally have a set of tools that match my preferred way of working. Embracing constraints and using a few simple tools has allowed me to focus on the task of writing and to publish on a reliable, robust web host for pennies a month.</p>
]]></content>
  </entry>
  
</feed>
